
@model FMS.Data.User

@{
    ViewBag.Title = "Sửa";
    var roles = (IList<IdentityRole>)ViewBag.Roles;
    var airports = (IList<Airport>)ViewBag.Airports;
}

@*<h2>Edit</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.IsEnabled)
    @Html.HiddenFor(model => model.DateCreated)
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, "Tên đăng nhập", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FullName, "Tên đầy đủ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Nhóm người dùng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var item in roles)
            {
                <div>
                    <label>
                        @if (ViewBag.ExistingRoleId != null)
                        {
                            var ids = (string[])ViewBag.ExistingRoleId;
                            <input type="checkbox" name="RoleId" class="minimal" value="@item.Id" @(ids.Contains(item.Id) ? "checked" : "") /> @item.Name
                        }
                        else
                        {
                            <input type="checkbox" name="RoleId" class="minimal" value="@item.Id" /> @item.Name
                        }
                    </label>
                </div>
            }
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Quyền thao tác", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div>
                <label>
                    @Html.CheckBoxFor(model => model.IsCreateRefuel, new { @class = "minimal" }) Tạo kế hoạch tra nạp trên App
                </label>
            </div>
            <div>
                <label>
                    @Html.CheckBoxFor(model => model.IsCreateExtract, new { @class = "minimal" }) Tạo kế hoạch hút trên App
                </label>
            </div>
            <div>
                <label>
                    @Html.CheckBoxFor(model => model.IsCreateCustomer, new { @class = "minimal" }) Tạo khách hàng mới trên App
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Sân bay", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var item in airports)
            {
                <div>
                    <label>
                        @if (item.Id == Model.AirportId)
                        {
                            @Html.RadioButton("AirportId", item.Id, true, htmlAttributes: new { @class = "minimal" }) @item.Name
                        }
                        else
                        {
                            @Html.RadioButton("AirportId", item.Id, false, htmlAttributes: new { @class = "minimal" }) @item.Name
                        }
                    </label>
                </div>

            }
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Quay về danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
