@model FMS.Data.Flight

@{
    ViewBag.Title = "Tạo mới chuyến bay";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btn_save" type="submit" value="Lưu" class="btn btn-primary" />
                @Html.ActionLink("Quay về danh sách", "Index")
            </div>
        </div>*@
        <div class="form-group">
            @Html.Label("Số hiệu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AircraftCode, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.AircraftCode, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Số chuyến", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Charter", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AirlineId", null, "-- Chọn Charter --", htmlAttributes: new { @class = "form-control select2" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Chuyên chở", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control select2" id="FlightCarry" name="FlightCarry">
                    <option value="0">PAX</option>
                    <option value="1">CCO</option>
                    <option value="2">CGO</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Bãi đỗ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("ParkingLotId", null, htmlAttributes: new { @class = "form-control select2" })*@
                @Html.EditorFor(model => model.Parking, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Đường bay", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RouteName, new { htmlAttributes = new { @class = "form-control", @Value = !string.IsNullOrEmpty(ViewBag.AirportCode) ? ViewBag.AirportCode + "-" : "" } })
                @*@Html.ValidationMessageFor(model => model.RouteName, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Loại tàu bay", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AircraftType, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.AircraftType, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Ngày nạp dầu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    <input type="text" id="RefuelScheduledTime" class="form-control pull-right datepicker" readonly value="@DateTime.Now.ToString("dd/MM/yyyy")">
                    @Html.HiddenFor(model => model.RefuelScheduledTime)
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Sản lượng dự kiến", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimateAmount, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                @*@Html.ValidationMessageFor(model => model.EstimateAmount, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Giờ hạ cánh dự kiến", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ArrivalScheduledTime, new { htmlAttributes = new { @class = "form-control timepicker2" } })
                @*@Html.ValidationMessageFor(model => model.ArrivalScheduledTime, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Giờ cất cánh dự kiến", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartureScheduledTime, new { htmlAttributes = new { @class = "form-control timepicker" } })
                @*@Html.ValidationMessageFor(model => model.DepartureScheduledTime, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Giờ nạp dầu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RefuelScheduledHours, new { htmlAttributes = new { @class = "form-control timepicker" } })
                @*@Html.ValidationMessageFor(model => model.RefuelScheduledHours, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })*@
            </div>
        </div>
        @*<div class="form-group hidden">
                @Html.Label("Xe tra nạp", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <table class="table table-bordered text-nowrap" id="table">
                            <thead>
                                <tr>
                                    <th class="text-center">#</th>
                                    <th>Xe</th>
                                    <th>Lái xe</th>
                                    <th>Kỹ thuật viên</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in trucks)
                                {
                                    <tr>
                                        <td class="text-center">
                                            <input name="trucks" type="checkbox" value="@item.Id" class="checkbox2" />
                                        </td>
                                        <td>
                                            @item.Code
                                        </td>
                                        <td>
                                            @Html.DropDownList("DriverId", new SelectList(driver, "Id", "FullName"), htmlAttributes: new { @class = "form-control driverId" })
                                        </td>
                                        <td>
                                            @Html.DropDownList("OperatorId", new SelectList(oper, "Id", "FullName"), htmlAttributes: new { @class = "form-control operatorId" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    @Html.EditorFor(model => model.TruckName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TruckName, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btn_save" type="submit" value="Lưu" class="btn btn-primary"  />
                @Html.ActionLink("Quay về danh sách", "Index")
            </div>
        </div>
    </div>
}



@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script src="~/admin-lte2.4/plugins/timepicker/bootstrap-timepicker.js"></script>
    <script src="~/Content/select2/js/select2.full.min.js"></script>

    <script>

        $('#btn_save').click(function () {
     
            var regex = /^(\d*\.?\d*)$/;
            var regex_time = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;
            var air = $('#Code');
            var estimateAmount = $('#EstimateAmount');
            var departureScheduledTime = $('#DepartureScheduledTime');
            var refuelScheduledHours = $('#RefuelScheduledHours');

            if (air.val() == "") {
                alert("Vui lòng nhập số chuyến");
                air.focus();
                return false;
            }

            if (!regex.test(estimateAmount.val()) || estimateAmount.val() == "") {
                alert("Sản lượng dự kiến phải là kiểu số");
                estimateAmount.val(0);
                return false;
            }
            //if (estimateAmount.val() == "") {
            //    alert("Vui lòng nhập sản lượng dự kiến");
            //    estimateAmount.focus();
            //    return false;
            //}
            
            if (!regex_time.test(departureScheduledTime.val()) || departureScheduledTime.val() == "") {
                alert("Giờ cất cánh dự kiến sai định dạng");
                departureScheduledTime.focus();
                return false;
            }
            if (!regex_time.test(refuelScheduledHours.val()) || refuelScheduledHours.val() == "") {
                alert("Giờ nạp dầu sai định dạng");
                refuelScheduledHours.focus();
                return false;
            }
            changeDate();
            //return true;
            //$(".datepicker").each(function () {
            //    var val = $(this).val();
            //    var pattern = /(\d{2})\/(\d{2})\/(\d{4})/;
            //    $(this).siblings("input[type=hidden]").val(val.replace(pattern, "$3/$2/$1"));
            //});
            
        });

        $(function () {
            $(".select2").select2();
            $(".datepicker").datepicker({
                format: "dd/mm/yyyy",
                autoclose: true,
            });

            $('.timepicker').timepicker({
                showInputs: false,
                showMeridian: false,
                minuteStep: 1
            })

            $('.timepicker2').timepicker({
                defaultTime: '',
                showInputs: false,
                showMeridian: false,
                minuteStep: 1
            })
        })

        function changeDate() {

            $(".datepicker").each(function () {
                val = $(this).val();
                var pattern = /(\d{2})\/(\d{2})\/(\d{4})/;
                $(this).siblings("input[type=hidden]").val(val.replace(pattern, "$3/$2/$1"));
            });
            return true;

        }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
}
